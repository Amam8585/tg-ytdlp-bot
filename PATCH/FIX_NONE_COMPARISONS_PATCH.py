#!/usr/bin/env python3
"""
–ü–ê–¢–ß: –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤—Å–µ—Ö —Å—Ä–∞–≤–Ω–µ–Ω–∏–π —Å None –≤ –∫–æ–¥–µ
–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –Ω–∞—Ö–æ–¥–∏—Ç –∏ –∏—Å–ø—Ä–∞–≤–ª—è–µ—Ç –≤—Å–µ –º–µ—Å—Ç–∞ –≥–¥–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Å—Ä–∞–≤–Ω–∏–≤–∞—é—Ç—Å—è —Å —á–∏—Å–ª–∞–º–∏ –±–µ–∑ –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞ None
"""
import os
import re
import glob

def fix_none_comparisons_in_file(file_path):
    """–ò—Å–ø—Ä–∞–≤–∏—Ç—å —Å—Ä–∞–≤–Ω–µ–Ω–∏—è —Å None –≤ –æ–¥–Ω–æ–º —Ñ–∞–π–ª–µ"""
    changes_made = 0
    
    try:
        with open(file_path, 'r', encoding='utf-8') as f:
            content = f.read()
        
        original_content = content
        
        # –ü–∞—Ç—Ç–µ—Ä–Ω 1: if variable and variable > number
        pattern1 = r'if\s+([a-zA-Z_][a-zA-Z0-9_]*)\s*>\s*([0-9]+)'
        def replace1(match):
            var_name = match.group(1)
            number = match.group(2)
            return f'if {var_name} and {var_name} > {number}'
        
        content = re.sub(pattern1, replace1, content)
        
        # –ü–∞—Ç—Ç–µ—Ä–Ω 2: if variable and variable < number  
        pattern2 = r'if\s+([a-zA-Z_][a-zA-Z0-9_]*)\s*<\s*([0-9]+)'
        def replace2(match):
            var_name = match.group(1)
            number = match.group(2)
            return f'if {var_name} and {var_name} < {number}'
        
        content = re.sub(pattern2, replace2, content)
        
        # –ü–∞—Ç—Ç–µ—Ä–Ω 3: if variable and variable > expression (—Å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏)
        pattern3 = r'if\s+([a-zA-Z_][a-zA-Z0-9_]*)\s*>\s*([a-zA-Z_][a-zA-Z0-9_]*\([^)]*\))'
        def replace3(match):
            var_name = match.group(1)
            expression = match.group(2)
            return f'if {var_name} and {var_name} > {expression}'
        
        content = re.sub(pattern3, replace3, content)
        
        # –ü–∞—Ç—Ç–µ—Ä–Ω 4: if variable and variable < expression (—Å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏)
        pattern4 = r'if\s+([a-zA-Z_][a-zA-Z0-9_]*)\s*<\s*([a-zA-Z_][a-zA-Z0-9_]*\([^)]*\))'
        def replace4(match):
            var_name = match.group(1)
            expression = match.group(2)
            return f'if {var_name} and {var_name} < {expression}'
        
        content = re.sub(pattern4, replace4, content)
        
        # –ü–∞—Ç—Ç–µ—Ä–Ω 5: if variable and variable > variable
        pattern5 = r'if\s+([a-zA-Z_][a-zA-Z0-9_]*)\s*>\s*([a-zA-Z_][a-zA-Z0-9_]*)\s*-\s*([0-9]+)'
        def replace5(match):
            var_name = match.group(1)
            other_var = match.group(2)
            number = match.group(3)
            return f'if {var_name} and {var_name} > {other_var} - {number}'
        
        content = re.sub(pattern5, replace5, content)
        
        # –ü–∞—Ç—Ç–µ—Ä–Ω 6: if variable and variable < variable
        pattern6 = r'if\s+([a-zA-Z_][a-zA-Z0-9_]*)\s*<\s*([a-zA-Z_][a-zA-Z0-9_]*)\s*-\s*([0-9]+)'
        def replace6(match):
            var_name = match.group(1)
            other_var = match.group(2)
            number = match.group(3)
            return f'if {var_name} and {var_name} < {other_var} - {number}'
        
        content = re.sub(pattern6, replace6, content)
        
        # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
        if content != original_content:
            changes_made = len(re.findall(r'if\s+[a-zA-Z_][a-zA-Z0-9_]*\s+and\s+[a-zA-Z_][a-zA-Z0-9_]*\s*[><]', content)) - len(re.findall(r'if\s+[a-zA-Z_][a-zA-Z0-9_]*\s+and\s+[a-zA-Z_][a-zA-Z0-9_]*\s*[><]', original_content))
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
            with open(file_path, 'w', encoding='utf-8') as f:
                f.write(content)
    
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ {file_path}: {e}")
    
    return changes_made

def apply_patch():
    """–ü—Ä–∏–º–µ–Ω–∏—Ç—å –ø–∞—Ç—á –∫–æ –≤—Å–µ–º Python —Ñ–∞–π–ª–∞–º"""
    print("üîß –ü–ê–¢–ß: –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤—Å–µ—Ö —Å—Ä–∞–≤–Ω–µ–Ω–∏–π —Å None")
    print("=" * 50)
    
    # –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ Python —Ñ–∞–π–ª—ã
    python_files = []
    for root, dirs, files in os.walk('.'):
        # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –ø–∞–ø–∫–∏ —Å –≤—Ä–µ–º–µ–Ω–Ω—ã–º–∏ —Ñ–∞–π–ª–∞–º–∏
        if any(skip in root for skip in ['__pycache__', '.git', 'venv', 'backup']):
            continue
            
        for file in files:
            if file.endswith('.py') and not file.startswith('.'):
                python_files.append(os.path.join(root, file))
    
    total_changes = 0
    files_changed = 0
    
    for file_path in python_files:
        changes = fix_none_comparisons_in_file(file_path)
        if changes and changes > 0:
            print(f"‚úÖ {file_path}: {changes} –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π")
            total_changes += changes
            files_changed += 1
    
    print(f"\nüìä –†–ï–ó–£–õ–¨–¢–ê–¢:")
    print(f"   –§–∞–π–ª–æ–≤ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ: {len(python_files)}")
    print(f"   –§–∞–π–ª–æ–≤ –∏–∑–º–µ–Ω–µ–Ω–æ: {files_changed}")
    print(f"   –í—Å–µ–≥–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π: {total_changes}")
    
    if total_changes and total_changes > 0:
        print(f"\nüéâ –ü–ê–¢–ß –£–°–ü–ï–®–ù–û –ü–†–ò–ú–ï–ù–ï–ù!")
        print(f"   –í—Å–µ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è —Å None —Ç–µ–ø–µ—Ä—å –∑–∞—â–∏—â–µ–Ω—ã!")
    else:
        print(f"\n‚úÖ –ü—Ä–æ–±–ª–µ–º –Ω–µ –Ω–∞–π–¥–µ–Ω–æ - –∫–æ–¥ —É–∂–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω!")

if __name__ == "__main__":
    apply_patch()
