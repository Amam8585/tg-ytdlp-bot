#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç Firebase —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π –±–µ–∑ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Pyrogram
"""

import os
import sys
import time
import gc
from datetime import datetime

# –î–æ–±–∞–≤–ª—è–µ–º —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

def get_file_descriptors():
    """–ü–æ–ª—É—á–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ–∞–π–ª–æ–≤—ã—Ö –¥–µ—Å–∫—Ä–∏–ø—Ç–æ—Ä–æ–≤"""
    try:
        return len(os.listdir('/proc/self/fd'))
    except:
        return 0

def test_firebase_only():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ç–æ–ª—å–∫–æ Firebase —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –±–µ–∑ Pyrogram"""
    try:
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –º–æ–¥—É–ª–∏
        from CONFIG.config import Config
        from DATABASE.firebase_init import RestDBAdapter, _get_database_url
        
        print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–æ–ª—å–∫–æ Firebase —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π...")
        
        # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è —Å–±–æ—Ä–∫–∞ –º—É—Å–æ—Ä–∞
        gc.collect()
        
        # –ù–∞—á–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ–∞–π–ª–æ–≤—ã—Ö –¥–µ—Å–∫—Ä–∏–ø—Ç–æ—Ä–æ–≤
        initial_fds = get_file_descriptors()
        print(f"üìä –ù–∞—á–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ–∞–π–ª–æ–≤—ã—Ö –¥–µ—Å–∫—Ä–∏–ø—Ç–æ—Ä–æ–≤: {initial_fds}")
        
        # –°–æ–∑–¥–∞–µ–º Firebase —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
        database_url = _get_database_url()
        api_key = getattr(Config, "FIREBASE_CONF", {}).get("apiKey")
        
        if not api_key:
            print("‚ùå FIREBASE_CONF.apiKey –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return False
            
        # –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è
        import requests
        from requests import Session
        from requests.adapters import HTTPAdapter
        
        auth_session = Session()
        auth_session.headers.update({
            'User-Agent': 'tg-ytdlp-bot/1.0',
            'Connection': 'keep-alive'
        })
        
        auth_adapter = HTTPAdapter(
            pool_connections=5,
            pool_maxsize=10,
            max_retries=3,
            pool_block=False
        )
        auth_session.mount('http://', auth_adapter)
        auth_session.mount('https://', auth_adapter)
        
        try:
            auth_url = f"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key={api_key}"
            resp = auth_session.post(auth_url, json={
                "email": getattr(Config, "FIREBASE_USER", None),
                "password": getattr(Config, "FIREBASE_PASSWORD", None),
                "returnSecureToken": True,
            }, timeout=60)
            resp.raise_for_status()
            payload = resp.json()
            id_token = payload.get("idToken")
            refresh_token = payload.get("refreshToken")
            
            if not id_token:
                print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å idToken")
                return False
                
            print("‚úÖ –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞")
            
        finally:
            auth_session.close()
        
        # –°–æ–∑–¥–∞–µ–º Firebase –∞–¥–∞–ø—Ç–µ—Ä
        db = RestDBAdapter(database_url, id_token, refresh_token, api_key, "/")
        
        # –í—ã–ø–æ–ª–Ω—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏
        for i in range(5):
            try:
                # –¢–µ—Å—Ç —á—Ç–µ–Ω–∏—è
                result = db.child("bot").child("tgytdlp_bot").child("users").get()
                print(f"‚úÖ –¢–µ—Å—Ç {i+1}: –ß—Ç–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ")
                
                # –¢–µ—Å—Ç –∑–∞–ø–∏—Å–∏
                test_data = {"test": f"simple_test_{i}", "timestamp": int(time.time())}
                db.child("bot").child("tgytdlp_bot").child("simple_test").child(f"test_{i}").set(test_data)
                print(f"‚úÖ –¢–µ—Å—Ç {i+1}: –ó–∞–ø–∏—Å—å —É—Å–ø–µ—à–Ω–æ")
                
                time.sleep(0.2)
                
            except Exception as e:
                print(f"‚ùå –¢–µ—Å—Ç {i+1} failed: {e}")
        
        # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è —Å–±–æ—Ä–∫–∞ –º—É—Å–æ—Ä–∞
        gc.collect()
        
        # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ–∞–π–ª–æ–≤—ã—Ö –¥–µ—Å–∫—Ä–∏–ø—Ç–æ—Ä–æ–≤ –ø–æ—Å–ª–µ –æ–ø–µ—Ä–∞—Ü–∏–π
        after_ops_fds = get_file_descriptors()
        print(f"üìä –§–î –ø–æ—Å–ª–µ –æ–ø–µ—Ä–∞—Ü–∏–π: {after_ops_fds}")
        print(f"üìà –†–∞–∑–Ω–∏—Ü–∞: {after_ops_fds - initial_fds}")
        
        # –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
        db.close()
        print("‚úÖ Firebase —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∑–∞–∫—Ä—ã—Ç–æ")
        
        # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è —Å–±–æ—Ä–∫–∞ –º—É—Å–æ—Ä–∞ –ø–æ—Å–ª–µ –∑–∞–∫—Ä—ã—Ç–∏—è
        gc.collect()
        time.sleep(1)
        
        # –§–∏–Ω–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ–∞–π–ª–æ–≤—ã—Ö –¥–µ—Å–∫—Ä–∏–ø—Ç–æ—Ä–æ–≤
        final_fds = get_file_descriptors()
        print(f"üìä –§–∏–Ω–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –§–î: {final_fds}")
        print(f"üìâ –£—Ç–µ—á–∫–∞: {final_fds - initial_fds}")
        
        if final_fds - initial_fds <= 5:
            print("‚úÖ –¢–µ—Å—Ç –ø—Ä–æ–π–¥–µ–Ω: —É—Ç–µ—á–∫–∏ –≤ –¥–æ–ø—É—Å—Ç–∏–º—ã—Ö –ø—Ä–µ–¥–µ–ª–∞—Ö")
            return True
        else:
            print("‚ùå –¢–µ—Å—Ç –Ω–µ –ø—Ä–æ–π–¥–µ–Ω: –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–∞—è —É—Ç–µ—á–∫–∞")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        import traceback
        traceback.print_exc()
        return False

if __name__ == "__main__":
    print("üöÄ –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç Firebase —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π")
    print("=" * 50)
    
    success = test_firebase_only()
    
    print("\n" + "=" * 50)
    if success:
        print("üéâ –¢–µ—Å—Ç –ø—Ä–æ–π–¥–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
    else:
        print("üí• –¢–µ—Å—Ç –Ω–µ –ø—Ä–æ–π–¥–µ–Ω")
    
    print(f"‚è∞ –í—Ä–µ–º—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è: {datetime.now()}")
