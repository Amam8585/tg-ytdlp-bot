# PO Token Provider Status Command
# Allows admins to check and manage PO token provider status

from pyrogram import filters
from CONFIG.config import Config
from HELPERS.app_instance import get_app
from HELPERS.logger import logger, send_to_user
from HELPERS.pot_helper import is_pot_provider_available, clear_pot_provider_cache, is_pot_enabled, get_pot_base_url

# Get app instance for decorators
app = get_app()

@app.on_message(filters.command("pot_status") & filters.private)
def pot_status_command(app, message):
    """
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç—É—Å PO token –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞
    –î–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º
    """
    user_id = message.chat.id
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
    if user_id not in Config.ADMIN:
        send_to_user(message, "‚ùå –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º")
        return
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç—É—Å
        pot_enabled = is_pot_enabled()
        base_url = get_pot_base_url()
        is_available = is_pot_provider_available()
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç
        status_text = "üîß **PO Token Provider Status**\n\n"
        
        # –°—Ç–∞—Ç—É—Å –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
        if pot_enabled:
            status_text += "‚úÖ **Enabled in config**\n"
        else:
            status_text += "‚ùå **Disabled in config**\n"
        
        # URL –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞
        status_text += f"üåê **Provider URL:** `{base_url}`\n"
        
        # –°—Ç–∞—Ç—É—Å –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏
        if is_available:
            status_text += "üü¢ **Provider Status:** Available\n"
        else:
            status_text += "üî¥ **Provider Status:** Unavailable\n"
        
        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
        if pot_enabled and not is_available:
            status_text += "\n‚ö†Ô∏è **Fallback Mode:** Bot will use standard YouTube extraction\n"
            status_text += "üí° **Tip:** Use `/pot_retry` to force recheck\n"
        elif pot_enabled and is_available:
            status_text += "\n‚úÖ **Active:** PO tokens will be used for YouTube downloads\n"
        else:
            status_text += "\n‚ÑπÔ∏è **Info:** PO token provider is disabled\n"
        
        send_to_user(message, status_text)
        
    except Exception as e:
        logger.error(f"Error in pot_status command: {e}")
        send_to_user(message, f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å—Ç–∞—Ç—É—Å–∞: {e}")

@app.on_message(filters.command("pot_retry") & filters.private)
def pot_retry_command(app, message):
    """
    –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –ø–µ—Ä–µ–ø—Ä–æ–≤–µ—Ä—è–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å PO token –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞
    –î–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º
    """
    user_id = message.chat.id
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
    if user_id not in Config.ADMIN:
        send_to_user(message, "‚ùå –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º")
        return
    
    try:
        # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∫—ç—à
        clear_pot_provider_cache()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å
        is_available = is_pot_provider_available()
        base_url = get_pot_base_url()
        
        if is_available:
            send_to_user(message, f"‚úÖ **PO Token Provider is now available!**\n\nüåê URL: `{base_url}`\n\nüîÑ Cache cleared and rechecked successfully")
        else:
            send_to_user(message, f"‚ùå **PO Token Provider is still unavailable**\n\nüåê URL: `{base_url}`\n\n‚ö†Ô∏è Bot will continue using fallback mode")
        
    except Exception as e:
        logger.error(f"Error in pot_retry command: {e}")
        send_to_user(message, f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–ø—Ä–æ–≤–µ—Ä–∫–µ: {e}")

@app.on_message(filters.command("pot_disable") & filters.private)
def pot_disable_command(app, message):
    """
    –í—Ä–µ–º–µ–Ω–Ω–æ –æ—Ç–∫–ª—é—á–∞–µ—Ç PO token –ø—Ä–æ–≤–∞–π–¥–µ—Ä (—Ç–æ–ª—å–∫–æ –¥–ª—è —Ç–µ–∫—É—â–µ–π —Å–µ—Å—Å–∏–∏)
    –î–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º
    """
    user_id = message.chat.id
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
    if user_id not in Config.ADMIN:
        send_to_user(message, "‚ùå –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º")
        return
    
    try:
        # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∫—ç—à –∏ –ø–æ–º–µ—á–∞–µ–º –∫–∞–∫ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã–π
        clear_pot_provider_cache()
        global _pot_provider_cache
        _pot_provider_cache['available'] = False
        
        send_to_user(message, "üî¥ **PO Token Provider temporarily disabled**\n\n‚ö†Ô∏è Bot will use standard YouTube extraction until restart or `/pot_retry`")
        
    except Exception as e:
        logger.error(f"Error in pot_disable command: {e}")
        send_to_user(message, f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫–ª—é—á–µ–Ω–∏–∏: {e}")
